#include <gmock/gmock.h>

#include <memory>

#include "common/chartformat/chartformat_bms.h"
#include "game/replay/replay_chart.h"
#include "game/ruleset/ruleset.h"
#include "game/ruleset/ruleset_bms_replay.h"

TEST(RulesetBmsReplay, SkipToEndWorks)
{
    auto r = std::make_shared<ReplayChart>();
    r->loadXml(
        R"(<?xml version="1.0" encoding="utf-8"?><cereal><value0><cereal_class_version>2</cereal_class_version><value0>118031106</value0><value1><value0>179</value0><value1>190</value1><value2>233</value2><value3>15</value3><value4>211</value4><value5>94</value5><value6>97</value6><value7>64</value7><value8>244</value8><value9>193</value9><value10>6</value10><value11>193</value11><value12>133</value12><value13>99</value13><value14>171</value14><value15>163</value15></value1><value2>63968571139525797</value2><value3>3</value3><value4>0</value4><value5>0</value5><value6>2</value6><value7>0</value7><value8>0</value8><value9>0</value9><value10>6</value10><value11>false</value11><value12>false</value12><value13>3.5864150943396225</value13><value14>10</value14><value15>0</value15><value16>true</value16><value17 size="dynamic"><value0><value0>14</value0><value1>34</value1><value2>0</value2></value0><value1><value0>54</value0><value1>7</value1><value2>0</value2></value1><value2><value0>62</value0><value1>6</value1><value2>0</value2></value2><value3><value0>62</value0><value1>8</value1><value2>0</value2></value3><value4><value0>64</value0><value1>36</value1><value2>0</value2></value4><value5><value0>81</value0><value1>35</value1><value2>0</value2></value5><value6><value0>138</value0><value1>9</value1><value2>0</value2></value6><value7><value0>163</value0><value1>10</value1><value2>0</value2></value7><value8><value0>174</value0><value1>32</value1><value2>0</value2></value8><value9><value0>182</value0><value1>33</value1><value2>0</value2></value9><value10><value0>199</value0><value1>34</value1><value2>0</value2></value10><value11><value0>248</value0><value1>7</value1><value2>0</value2></value11><value12><value0>256</value0><value1>6</value1><value2>0</value2></value12><value13><value0>256</value0><value1>8</value1><value2>0</value2></value13><value14><value0>258</value0><value1>36</value1><value2>0</value2></value14><value15><value0>267</value0><value1>35</value1><value2>0</value2></value15><value16><value0>315</value0><value1>9</value1><value2>0</value2></value16><value17><value0>332</value0><value1>10</value1><value2>0</value2></value17><value18><value0>368</value0><value1>32</value1><value2>0</value2></value18><value19><value0>368</value0><value1>33</value1><value2>0</value2></value19><value20><value0>376</value0><value1>34</value1><value2>0</value2></value20><value21><value0>433</value0><value1>6</value1><value2>0</value2></value21><value22><value0>433</value0><value1>7</value1><value2>0</value2></value22><value23><value0>435</value0><value1>36</value1><value2>0</value2></value23><value24><value0>443</value0><value1>35</value1><value2>0</value2></value24><value25><value0>450</value0><value1>8</value1><value2>0</value2></value25><value26><value0>509</value0><value1>9</value1><value2>0</value2></value26><value27><value0>526</value0><value1>10</value1><value2>0</value2></value27><value28><value0>536</value0><value1>32</value1><value2>0</value2></value28><value29><value0>544</value0><value1>33</value1><value2>0</value2></value29><value30><value0>552</value0><value1>34</value1><value2>0</value2></value30><value31><value0>610</value0><value1>7</value1><value2>0</value2></value31><value32><value0>612</value0><value1>36</value1><value2>0</value2></value32><value33><value0>626</value0><value1>6</value1><value2>0</value2></value33><value34><value0>634</value0><value1>8</value1><value2>0</value2></value34><value35><value0>636</value0><value1>35</value1><value2>0</value2></value35><value36><value0>685</value0><value1>9</value1><value2>0</value2></value36><value37><value0>703</value0><value1>10</value1><value2>0</value2></value37><value38><value0>721</value0><value1>32</value1><value2>0</value2></value38><value39><value0>721</value0><value1>33</value1><value2>0</value2></value39><value40><value0>730</value0><value1>34</value1><value2>0</value2></value40><value41><value0>797</value0><value1>36</value1><value2>0</value2></value41><value42><value0>803</value0><value1>6</value1><value2>0</value2></value42><value43><value0>803</value0><value1>7</value1><value2>0</value2></value43><value44><value0>813</value0><value1>35</value1><value2>0</value2></value44><value45><value0>820</value0><value1>8</value1><value2>0</value2></value45><value46><value0>870</value0><value1>9</value1><value2>0</value2></value46><value47><value0>878</value0><value1>10</value1><value2>0</value2></value47><value48><value0>914</value0><value1>32</value1><value2>0</value2></value48><value49><value0>914</value0><value1>33</value1><value2>0</value2></value49><value50><value0>923</value0><value1>34</value1><value2>0</value2></value50><value51><value0>973</value0><value1>36</value1><value2>0</value2></value51><value52><value0>980</value0><value1>7</value1><value2>0</value2></value52><value53><value0>991</value0><value1>35</value1><value2>0</value2></value53><value54><value0>997</value0><value1>6</value1><value2>0</value2></value54><value55><value0>1004</value0><value1>8</value1><value2>0</value2></value55><value56><value0>1039</value0><value1>9</value1><value2>0</value2></value56><value57><value0>1064</value0><value1>10</value1><value2>0</value2></value57><value58><value0>1090</value0><value1>32</value1><value2>0</value2></value58><value59><value0>1099</value0><value1>33</value1><value2>0</value2></value59><value60><value0>1124</value0><value1>34</value1><value2>0</value2></value60><value61><value0>1173</value0><value1>7</value1><value2>0</value2></value61><value62><value0>1174</value0><value1>36</value1><value2>0</value2></value62><value63><value0>1198</value0><value1>6</value1><value2>0</value2></value63><value64><value0>1207</value0><value1>8</value1><value2>0</value2></value64><value65><value0>1241</value0><value1>10</value1><value2>0</value2></value65><value66><value0>1327</value0><value1>32</value1><value2>0</value2></value66><value67><value0>1334</value0><value1>33</value1><value2>0</value2></value67><value68><value0>1351</value0><value1>34</value1><value2>0</value2></value68><value69><value0>1351</value0><value1>36</value1><value2>0</value2></value69><value70><value0>1363</value0><value1>35</value1><value2>0</value2></value70><value71><value0>1375</value0><value1>8</value1><value2>0</value2></value71><value72><value0>1392</value0><value1>6</value1><value2>0</value2></value72><value73><value0>1392</value0><value1>7</value1><value2>0</value2></value73><value74><value0>1408</value0><value1>9</value1><value2>0</value2></value74><value75><value0>1416</value0><value1>10</value1><value2>0</value2></value75><value76><value0>1528</value0><value1>32</value1><value2>0</value2></value76><value77><value0>1528</value0><value1>33</value1><value2>0</value2></value77><value78><value0>1537</value0><value1>34</value1><value2>0</value2></value78><value79><value0>1619</value0><value1>6</value1><value2>0</value2></value79><value80><value0>1629</value0><value1>35</value1><value2>0</value2></value80><value81><value0>1654</value0><value1>36</value1><value2>0</value2></value81><value82><value0>2005</value0><value1>7</value1><value2>0</value2></value82><value83><value0>2335</value0><value1>33</value1><value2>0</value2></value83><value84><value0>2509</value0><value1>8</value1><value2>0</value2></value84><value85><value0>3125</value0><value1>32</value1><value2>0</value2></value85><value86><value0>3142</value0><value1>34</value1><value2>0</value2></value86><value87><value0>3274</value0><value1>10</value1><value2>0</value2></value87><value88><value0>3283</value0><value1>4</value1><value2>0</value2></value88><value89><value0>3554</value0><value1>30</value1><value2>0</value2></value89><value90><value0>3595</value0><value1>36</value1><value2>0</value2></value90><value91><value0>3636</value0><value1>4</value1><value2>0</value2></value91><value92><value0>3933</value0><value1>30</value1><value2>0</value2></value92><value93><value0>4157</value0><value1>5</value1><value2>0</value2></value93><value94><value0>4423</value0><value1>31</value1><value2>0</value2></value94><value95><value0>4468</value0><value1>4</value1><value2>0</value2></value95><value96><value0>4789</value0><value1>30</value1><value2>0</value2></value96></value17></value0></cereal>)");
    auto bms = std::make_shared<ChartFormatBMS>("bms/5k.bms", r->randomSeed);
    ASSERT_EQ(bms->fileHash, HashMD5{"b3bee90fd35e6140f4c106c18563aba3"});
    auto obj = ChartObjectBase::createFromChartFormat(PLAYER_SLOT_TARGET, bms);
    RulesetBMSReplay rr(bms, obj, r, r->getMods(), bms->gamemode, bms->rank.value_or(RulesetBMS::LR2_DEFAULT_RANK), 20.,
                        RulesetBMS::PlaySide::AUTO, 0, 1.0);
    rr.update(LLONG_MAX);
    EXPECT_EQ(rr.getJudgeCount(RulesetBMS::JudgeType::PERFECT), 1);
    EXPECT_EQ(rr.getJudgeCount(RulesetBMS::JudgeType::GREAT), 2);
    EXPECT_EQ(rr.getJudgeCount(RulesetBMS::JudgeType::GOOD), 3);
    EXPECT_EQ(rr.getJudgeCount(RulesetBMS::JudgeType::BAD), 2);
    EXPECT_EQ(rr.getJudgeCount(RulesetBMS::JudgeType::KPOOR), 7);
    EXPECT_EQ(rr.getJudgeCount(RulesetBMS::JudgeType::MISS), 0);
    EXPECT_EQ(rr.getJudgeCountEx(RulesetBMS::JUDGE_EARLY), 7);
    EXPECT_EQ(rr.getJudgeCountEx(RulesetBMS::JUDGE_LATE), 7);
    const RulesetBase::BasicData data = rr.getData();
    EXPECT_EQ(data.play_time, (lunaticvibes::Time{4789, false})); // Scuffed number, it differs in each replay.
    EXPECT_DOUBLE_EQ(data.health, 1.0);
    EXPECT_DOUBLE_EQ(data.acc, 25.);
    EXPECT_DOUBLE_EQ(data.total_acc, 25.);
    EXPECT_EQ(data.combo, 1);
    EXPECT_EQ(data.maxCombo, 3);
    EXPECT_EQ(data.firstMaxCombo, 2);
    EXPECT_EQ(data.comboDisplay, 0);
    EXPECT_EQ(data.maxComboDisplay, 3);
}
